{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\nconst input = document.querySelector(\"#datetime-picker\");\nflatpickr(input, {});\n\n\n// import \"../node_modules/izitoast/dist/css/iziToast.min.css\"; \n// import iziToast from \"izitoast\";  \nimport \"izitoast/dist/css/iziToast.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\";\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let userSelectedDate = 0;\n  let intervalId = null;\n  let dif = null;\n  let timerFinished = false; // Змінна для перевірки чи показано повідомлення\n\n  const input = document.querySelector(\"#datetime-picker\");\n  const btnStart = document.querySelector(\"button[data-start]\");\n  const days = document.querySelector(\"[data-days]\");\n  const hours = document.querySelector(\"[data-hours]\");\n  const minutes = document.querySelector(\"[data-minutes]\");\n  const seconds = document.querySelector(\"[data-seconds]\");\n\n  // Функція для додавання нуля, якщо число менше 10\n  function addLeadingZero(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n  // Функція для конвертації мілісекунд у дні, години, хвилини і секунди\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n\n      if (userSelectedDate <= new Date()) {\n        iziToast.show({\n          title: \"Помилка\",\n          message: \"Please choose a date in the future\",\n          position: \"topRight\",\n          backgroundColor: \"#ff0000\",\n          timeout: 3000,\n        });\n\n        btnStart.setAttribute(\"disabled\", \"\");\n        userSelectedDate = 0;\n      } else {\n        btnStart.removeAttribute(\"disabled\");\n      }\n    },\n  };\n\n  if (!input) {\n    console.error(\"Елемент #datetime-picker не знайдено!\");\n    return;\n  }\n\n  flatpickr(input, options);\n\n  // Запуск таймера\n  btnStart.addEventListener(\"click\", () => {\n    if (!userSelectedDate) {\n      iziToast.show({\n        title: \"Помилка\",\n        message: \"Please choose a valid future date\",\n        position: \"topRight\",\n        backgroundColor: \"#ff0000\",\n        timeout: 3000,\n      });\n      return;\n    }\n\n    // Якщо таймер вже запущений або завершений, нічого не робимо\n    if (intervalId || timerFinished) {\n      return;\n    }\n\n    // Дезактивуємо інпут та кнопку після запуску таймера\n    input.setAttribute(\"disabled\", \"\");\n    btnStart.setAttribute(\"disabled\", \"\");\n\n    intervalId = setInterval(() => {\n      const currentTime = new Date();\n      dif = userSelectedDate - currentTime;\n\n      if (dif <= 0) {\n        clearInterval(intervalId);\n        btnStart.setAttribute(\"disabled\", \"\");\n        input.removeAttribute(\"disabled\");\n\n        if (!timerFinished) {\n          iziToast.show({\n            title: \"Timer Finished\",\n            message: \"The time has arrived!\",\n            position: \"topRight\",\n            backgroundColor: \"#28a745\",\n            timeout: 3000,\n          });\n\n          timerFinished = true;\n        }\n        return;\n      }\n\n      // Використовуємо функцію convertMs для отримання днів, годин, хвилин, секунд\n      const { days: daysLeft, hours: hoursLeft, minutes: minutesLeft, seconds: secondsLeft } = convertMs(dif);\n\n      // Форматування часу з додаванням нуля\n      days.textContent = addLeadingZero(daysLeft);\n      hours.textContent = addLeadingZero(hoursLeft);\n      minutes.textContent = addLeadingZero(minutesLeft);\n      seconds.textContent = addLeadingZero(secondsLeft);\n    }, 1000);\n  });\n});"],"names":["input","flatpickr","userSelectedDate","intervalId","dif","timerFinished","btnStart","days","hours","minutes","seconds","addLeadingZero","value","convertMs","ms","options","selectedDates","iziToast","daysLeft","hoursLeft","minutesLeft","secondsLeft"],"mappings":"0IAIA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACvDC,EAAUD,EAAO,CAAA,CAAE,EAWnB,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,IAAIE,EAAmB,EACnBC,EAAa,KACbC,EAAM,KACNC,EAAgB,GAEpB,MAAML,EAAQ,SAAS,cAAc,kBAAkB,EACjDM,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAGvD,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAGE,SAASC,EAAUC,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC5C,CAEE,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBd,EAAmBc,EAAc,CAAC,EAE9Bd,GAAoB,IAAI,MAC1Be,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,QAAS,GACnB,CAAS,EAEDX,EAAS,aAAa,WAAY,EAAE,EACpCJ,EAAmB,GAEnBI,EAAS,gBAAgB,UAAU,CAEtC,CACF,EAED,GAAI,CAACN,EAAO,CACV,QAAQ,MAAM,uCAAuC,EACrD,MACJ,CAEEC,EAAUD,EAAOe,CAAO,EAGxBT,EAAS,iBAAiB,QAAS,IAAM,CACvC,GAAI,CAACJ,EAAkB,CACrBe,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,oCACT,SAAU,WACV,gBAAiB,UACjB,QAAS,GACjB,CAAO,EACD,MACN,CAGQd,GAAcE,IAKlBL,EAAM,aAAa,WAAY,EAAE,EACjCM,EAAS,aAAa,WAAY,EAAE,EAEpCH,EAAa,YAAY,IAAM,CAI7B,GAFAC,EAAMF,EADc,IAAI,KAGpBE,GAAO,EAAG,CACZ,cAAcD,CAAU,EACxBG,EAAS,aAAa,WAAY,EAAE,EACpCN,EAAM,gBAAgB,UAAU,EAE3BK,IACHY,EAAS,KAAK,CACZ,MAAO,iBACP,QAAS,wBACT,SAAU,WACV,gBAAiB,UACjB,QAAS,GACrB,CAAW,EAEDZ,EAAgB,IAElB,MACR,CAGM,KAAM,CAAE,KAAMa,EAAU,MAAOC,EAAW,QAASC,EAAa,QAASC,GAAgBR,EAAUT,CAAG,EAGtGG,EAAK,YAAcI,EAAeO,CAAQ,EAC1CV,EAAM,YAAcG,EAAeQ,CAAS,EAC5CV,EAAQ,YAAcE,EAAeS,CAAW,EAChDV,EAAQ,YAAcC,EAAeU,CAAW,CACjD,EAAE,GAAI,EACX,CAAG,CACH,CAAC"}